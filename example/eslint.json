[
  {
    "filePath": "/var/lib/jenkins/workspace/Releases/eslint Release/eslint/fullOfProblems.js",
    "messages": [
      {
        "ruleId": "no-unused-vars",
        "severity": 2,
        "message": "'addOne' is defined but never used.",
        "line": 1,
        "column": 10,
        "nodeType": "Identifier",
        "messageId": "unusedVar",
        "endLine": 1,
        "endColumn": 16
      },
      {
        "ruleId": "use-isnan",
        "severity": 2,
        "message": "Use the isNaN function to compare with NaN.",
        "line": 2,
        "column": 9,
        "nodeType": "BinaryExpression",
        "messageId": "comparisonWithNaN",
        "endLine": 2,
        "endColumn": 17
      },
      {
        "ruleId": "space-unary-ops",
        "severity": 2,
        "message": "Unexpected space before unary operator '++'.",
        "line": 3,
        "column": 16,
        "nodeType": "UpdateExpression",
        "messageId": "unexpectedBefore",
        "endLine": 3,
        "endColumn": 20,
        "fix": {
          "range": [
            57,
            58
          ],
          "text": ""
        }
      },
      {
        "ruleId": "semi",
        "severity": 1,
        "message": "Missing semicolon.",
        "line": 3,
        "column": 20,
        "nodeType": "ReturnStatement",
        "messageId": "missingSemi",
        "endLine": 4,
        "endColumn": 1,
        "fix": {
          "range": [
            60,
            60
          ],
          "text": ";"
        }
      },
      {
        "ruleId": "no-else-return",
        "severity": 1,
        "message": "Unnecessary 'else' after 'return'.",
        "line": 4,
        "column": 12,
        "nodeType": "BlockStatement",
        "messageId": "unexpected",
        "endLine": 6,
        "endColumn": 6,
        "fix": {
          "range": [
            0,
            94
          ],
          "text": "function addOne(i) {\n    if (i != NaN) {\n        return i ++\n    } \n      return\n    \n}"
        }
      },
      {
        "ruleId": "indent",
        "severity": 1,
        "message": "Expected indentation of 8 spaces but found 6.",
        "line": 5,
        "column": 1,
        "nodeType": "Keyword",
        "messageId": "wrongIndentation",
        "endLine": 5,
        "endColumn": 7,
        "fix": {
          "range": [
            74,
            80
          ],
          "text": "        "
        }
      },
      {
        "ruleId": "consistent-return",
        "severity": 2,
        "message": "Function 'addOne' expected a return value.",
        "line": 5,
        "column": 7,
        "nodeType": "ReturnStatement",
        "messageId": "missingReturnValue",
        "endLine": 5,
        "endColumn": 13
      },
      {
        "ruleId": "semi",
        "severity": 1,
        "message": "Missing semicolon.",
        "line": 5,
        "column": 13,
        "nodeType": "ReturnStatement",
        "messageId": "missingSemi",
        "endLine": 6,
        "endColumn": 1,
        "fix": {
          "range": [
            86,
            86
          ],
          "text": ";"
        }
      },
      {
        "ruleId": "no-extra-semi",
        "severity": 2,
        "message": "Unnecessary semicolon.",
        "line": 7,
        "column": 2,
        "nodeType": "EmptyStatement",
        "messageId": "unexpected",
        "endLine": 7,
        "endColumn": 3,
        "fix": {
          "range": [
            93,
            95
          ],
          "text": "}"
        }
      }
    ],
    "errorCount": 5,
    "warningCount": 4,
    "fixableErrorCount": 2,
    "fixableWarningCount": 4,
    "source": "function addOne(i) {\n    if (i != NaN) {\n        return i ++\n    } else {\n      return\n    }\n};"
  }
]
